apply plugin: "java"

sourceCompatibility = 1.8
sourceSets.main.java.srcDirs = [ "src/" ]

project.ext.mainClassName = "com.lok.game.desktop.DesktopLauncher"
project.ext.assetsDir = new File("../core/assets");

task run(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true
}

task debug(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true
    debug = true
}

task dist(type: Jar) {
    from files(sourceSets.main.output.classesDir)
    from files(sourceSets.main.output.resourcesDir)
    from {configurations.compile.collect {zipTree(it)}}
    from files(project.assetsDir);
 
    manifest {
        attributes 'Main-Class': project.mainClassName
    }
}

dist.dependsOn classes

eclipse {
    project {
        name = appName + "-desktop"
        linkedResource name: 'assets', type: '2', location: 'PARENT-1-PROJECT_LOC/core/assets'
    }
}

task afterEclipseImport(description: "Post processing after project generation", group: "IDE") {
  doLast {
    def classpath = new XmlParser().parse(file(".classpath"))
    new Node(classpath, "classpathentry", [ kind: 'src', path: 'assets' ]);
    def writer = new FileWriter(file(".classpath"))
    def printer = new XmlNodePrinter(new PrintWriter(writer))
    printer.setPreserveWhitespace(true)
    printer.print(classpath)
  }
}

task buildUnitTextureAtlas(dependsOn: classes, type: JavaExec, description: "Rebuilds the units texture atlas", group: "LegendOfKaminalyuyu") {
    main = 'com.badlogic.gdx.tools.texturepacker.TexturePacker'
    classpath = sourceSets.main.runtimeClasspath
    args = ['../core/assets/units/input', '../core/assets/units', 'units.atlas']
}

task buildEffectsTextureAtlas(dependsOn: classes, type: JavaExec, description: "Rebuilds the effects texture atlas", group: "LegendOfKaminalyuyu") {
    main = 'com.badlogic.gdx.tools.texturepacker.TexturePacker'
    classpath = sourceSets.main.runtimeClasspath
    args = ['../core/assets/effects/input', '../core/assets/effects', 'effects.atlas']
}

task buildTilesetTextureAtlas(dependsOn: classes, type: JavaExec, description: "Rebuilds the tilesets texture atlas", group: "LegendOfKaminalyuyu") {
    main = 'com.badlogic.gdx.tools.texturepacker.TexturePacker'
    classpath = sourceSets.main.runtimeClasspath
    args = ['../core/assets/maps/tilesets/input', '../core/assets/maps/tilesets', 'tilesets.atlas']
}

task buildLightsTextureAtlas(dependsOn: classes, type: JavaExec, description: "Rebuilds the lights texture atlas", group: "LegendOfKaminalyuyu") {
    main = 'com.badlogic.gdx.tools.texturepacker.TexturePacker'
    classpath = sourceSets.main.runtimeClasspath
    args = ['../core/assets/lights/input', '../core/assets/lights', 'lights.atlas']
}

task buildUITextureAtlas(dependsOn: classes, type: JavaExec, description: "Rebuilds the UI texture atlas", group: "LegendOfKaminalyuyu") {
    main = 'com.badlogic.gdx.tools.texturepacker.TexturePacker'
    classpath = sourceSets.main.runtimeClasspath
    args = ['../core/assets/ui/input', '../core/assets/ui', 'ui.atlas']
}

